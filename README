##README - Organizador de Dados em Lista Ligada

1. Objetivo do Projeto
Este projeto implementa um sistema para organizar grandes volumes de dados representados como números inteiros,
armazenados em uma lista ligada. A organização segue dois critérios:
- Números positivos são ordenados usando Merge Sort.
- Números negativos são ordenados usando uma versão adaptada do Radix Sort.
Ao final, os dados negativos ordenados aparecem antes dos positivos na lista final concatenada.

2. estrutura_lista.py
Contém a definição da estrutura de lista ligada personalizada.
- Classe Node: representa um nó da lista, com valor (data) e ponteiro (next).
- Classe LinkedList: contém métodos essenciais como:
 - insert_end(data): insere um novo nó no final.
 - print_list(): imprime os valores em ordem.
 - is_empty(): verifica se a lista está vazia.
 - to_list(): converte para lista Python comum (somente para visualização, não usada em ordenação).

3. merge_sort.py
Implementa o algoritmo Merge Sort adaptado para operar diretamente sobre listas ligadas.
- split_list(head): divide a lista ligada em duas metades.
- merge_sorted_lists(left, right): combina duas listas já ordenadas.
- merge_sort_linked_list(head): função recursiva principal.
Este algoritmo é aplicado somente aos números positivos.
Complexidade teórica: O(n log n)

4. radix_sort_negativos.py
Implementa Radix Sort adaptado para números negativos.
- Passo 1: Inverte o sinal de todos os valores (para torná-los positivos).
- Passo 2: Aplica Radix Sort usando buckets de 0 a 9, ordenando por cada dígito.
- Passo 3: Reverte os sinais após ordenação.
Funções auxiliares:
- get_max_digits: calcula o número de dígitos do maior número absoluto.
- get_digit: retorna o dígito específico de um número.
Complexidade teórica: O(nk), onde k é o número de dígitos.

5. main.py (função principal)
- Cria a lista original com valores de exemplo.
- Separa os valores em negativos e positivos usando separar_lista.
- Ordena os negativos com Radix Sort e positivos com Merge Sort.
- Concatena os resultados com concatenar_listas.
- Imprime as listas ordenadas e a lista final.
README - Organizador de Dados em Lista Ligada
- Exibe a complexidade teórica e o tempo real de execução (em milissegundos).
Funções auxiliares:
- separar_lista(head): percorre a lista original e separa os elementos em duas novas listas.
- concatenar_listas(lista1, lista2): une duas listas ligadas.

6. Observações Finais
- Nenhuma parte da ordenação converte listas ligadas em arrays, conforme exigido.
- O código é modular, podendo ser expandido para ler arquivos externos ou entrada do usuário.
- O tempo é medido com precisão em milissegundos.
Este projeto demonstra uma aplicação prática de algoritmos de ordenação sobre estrutura de dados dinâmica.